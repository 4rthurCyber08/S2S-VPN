_____________________
********************* SETUP VMNETS


VMWare > Edit > Virtual Network Editor

Add/Edit the following VMNets:

VMNet 3, 
	VMNet Info: Host-only
	IP address: 192.168.103.0
	Subnet Mask: 255.255.255.0
	DHCP: Unchecked

VMNet 4, 
	VMNet Info: Host-only
	IP address: 192.168.104.0
	Subnet Mask: 255.255.255.0
	DHCP: Unchecked
	
VMNet 8(NAT)
	VMNet Info: NAT
	IP address: 208.8.8.0
	Subnet Mask: 255.255.255.0
	DHCP: Checked

VMNet 15, 
	VMNet Info: Host-only
	IP address: 10.255.10.0
	Subnet Mask: 255.255.255.0
	DHCP: Unchecked

VMNet 16, 
	VMNet Info: Host-only
	IP address: 10.69.255.0
	Subnet Mask: 255.255.255.248
	DHCP: Unchecked
	
_____________________
********************* DEPLOY CSRS AND LINUX

Note the following VM Files:

CSR1000v 17.x = VPN-EDGE
YVM-v6 = BLDG


Deploy 2 CSR1000v

1. VPN-PH
	Name of Virtual Machine: VPN-PH
	Deployment Options: Small
	Bootstrap:
		Router Name: VPN-PH
		Login User: admin
		Login Pass: pass

	Network Adapter: NAT
	Network Adapter 2: VMNet15
	Network Adapter 3: VMNet3
		
2. VPN-JP
	Name of Virtual Machine: VPN-JP
	Deployment Options: Small
	Bootstrap:
		Router Name: VPN-JP
		Login User: admin
		Login Pass: pass

	Network Adapter: NAT
	Network Adapter 2: VMNet16
	Network Adapter 3: VMNet4

Deploy 2 YVM-v6

1. BLDG-PH
	Name of Virtual Machine: BLDG-PH

	Network Adapter: VMNet15
	
2. BLDG-JP-1
	Name of Virtual Machine: BLDG-JP-1
	
	Network Adapter: VMNet16

3. BLDG-JP-2
	Name of Virtual Machine: BLDG-JP-2
	
	Network Adapter: VMNet16
_____________________
********************* CONFIGURE DEVICES

!@NetOps
nmcli connection add \
type ethernet \
con-name TunayNaLAN \
if-name ens224 \
ipv4.method manual \
ipv4.addresses 10.255.10.6/24 \
autoconnect yes
nmcli connection up TunayNaLAN


!@VPN-PH
conf t
 hostname VPN-PH
 enable secret pass
 service password-encryption
 no logging cons
 no ip domain lookup
 line vty 0 14
  transport input all
  password pass
  login local
  exec-timeout 0 0
 int g1
  ip add 208.8.8.11 255.255.255.0
  no shut
 int g2
  ip add 10.255.10.254 255.255.255.0
  no shut
 int g3
  ip add 10.11.11.113 255.255.255.224
  no shut
 !
 username admin privilege 15 secret pass
 ip http server
 ip http secure-server
 ip http authentication local
 end
wr


!@VPN-JP
conf t
 hostname VPN-JP
 enable secret pass
 service password-encryption
 no logging cons
 no ip domain lookup
 line vty 0 14
  transport input all
  password pass
  login local 
  exec-timeout 0 0
 int g1
  ip add 208.8.8.12 255.255.255.0
  no shut
 int g2
  ip add 10.69.255.6 255.255.255.248
  no shut
 int g3
  ip add 10.21.21.213 255.255.255.240
  no shut
 !
 username admin privilege 15 secret pass
 ip http server
 ip http secure-server
 ip http authentication local
 end
wr


@BLDG-PH
sudo su
ifconfig eth0 10.11.11.126 netmask 255.255.255.224 up
route add default gw 10.11.11.113
ping 10.11.11.113

@BLDG-JP-1
sudo su
ifconfig eth0 10.21.21.209 netmask 255.255.255.240 up
route add default gw 10.21.21.213
ping 10.21.21.213

@BLDG-JP-2
sudo su
ifconfig eth0 10.21.21.210 netmask 255.255.255.240 up
route add default gw 10.21.21.213
ping 10.21.21.213


_____________________
********************* ACCESS VPN WEB GUI

Open a browser and enter the Gig2 IP address of the VPN.

http://10.255.10.254

http://10.69.255.6
















### Add User Accounts
!@All BLDG
sudo su
adduser admin

> New Password:    pass
> Retype Password: pass



| VPN-PH |     VARS       | BLDG-JP  |
| ---    | ---            | ---      |
|        | Authenticate   |          | 
|        |                |          |
|        | PHASE 1        |          |
|        | Encryption     |          |
|        | Integrity      |          |
|        | Group          |          |
|        |                |          |
|        | PHASE 2        |          |
|        | ESP-Encryption |          |
|        | ESP-Hash       |          |
|        | Tunnel IP      |          |
|        | Tunnel Mask    |          |
|        | Source Int     |          |
|        | Peer IP        |          |
|        | Remote Subnets |          |



## Cryptography 
### RSA Key Pair

!@NetOps
ssh-keygen -t rsa -b 1024 -f rsa.key
fold -w 46 rsa.key.pub

or

!@NetOps
openssl genpkey -algorithm RSA -out rsa_priv.key -pkeyopt rsa_keygen_bits:1024
openssl pkey -in rsa_priv.key -pubout -out rsa_pub.key


Verify:
!@cmd
ssh -l root 10.m.1.6/24

### FINGERPRINT
The authenticity of host '10.91.1.6 (10.91.1.6)' can't be established.
ED25519 key fingerprint is SHA256:K1lJBH2lpRJ3UkDLhvobaAwCMwPaCcQuWB5bIb8heBg.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])?

Where are the host private keys located on linux?
!@NetOps
cd /etc/ssh/

Verify the fingerprint
!@NetOps
ssh-keygen -lf ssh_host_ed25519_key.pub

Are the RSA keys used for payload encryption?


## Key Exchange
### Diffie-Hellman 
!@NetOps
openssl dhparam -out dhgroup.pem 1024

openssl genpkey -paramfile dhgroup.pem -out ph_priv.key
openssl pkey -in ph_priv.key -pubout -out ph_pub.key

openssl genpkey -paramfile dhgroup.pem -out jp_priv.key
openssl pkey -in jp_priv.key -pubout -out jp_pub.keyip.dst == 208.8.8.12

openssl pkeyutl -derive -inkey ph_priv.key -peerkey jp_pub.key -out ph-shared.secret
openssl pkeyutl -derive -inkey jp_priv.key -peerkey ph_pub.key -out jp-shared.secret

View Private key contents
!@NetOps
openssl pkey -in rsa_priv.key -text -noout



******
Encryption types
- Asymmetrical
  Key Pair
  - Private Key
  - Public Key

- Symmetrical
  Shared Key/Session Key

SSH - Server key is used only to verify authenticity.
RSA - Generate Key Pair

### SHA - Hash data for authenticity, hashes encrypted data
!@NetOps
echo my_gcash_info > data.txt
sha256sum data.txt

!@cmd
certutil -hashfile data.txt md5


### AES - Encrypts data in Session
!@NetOps
openssl enc -aes-256-cbc -in data.txt -out data.enc

Salted - add bits of info to the encryption to prevent reverse eng
Make sure to produce different output per encryption.


### DH-GROUP - Establish parameters for ephemeral keys to keep key exchange secure. Shared secret (a lot of math)
!@NetOps
openssl dhparam -out dhgroup.pem 1024


### HMAC-SHA256 - authenticity and identity of payload, use the hash of the shared session key to be added to the unencrypted message, then together both are hashed.
!@NetOps
sha256sum ph-shared.secret
nano pre.hmac
///
hash + unencrypted data
8e8b5b383ab2fac1a686b84a3decae33422d719d6b42648c92192fa3030ee3d6 my_gcash_info
///
openssl enc -aes-256-cbc -in pre.hmac -out hmac


### Signature - Encrypts Hash of the message using Ephemeral Priv Key/longterm private key
!@NetOps
sha256sum data.txt > hash.file
openssl pkeyutl -encrypt -inkey ph_priv.key -in hash.file -out Signature


### Fingerprint - Hash of the shared secret/public key, separate from the message.
!@NetOps
sha256sum rsa_pub.key


2048 key size = secure
******
